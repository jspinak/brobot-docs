"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[946],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=a,b=d["".concat(c,".").concat(m)]||d[m]||p[m]||o;return n?r.createElement(b,i(i({ref:t},u),{},{components:n})):r.createElement(b,i({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2070:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:4},i="States",s={unversionedId:"tutorial-mrdoob/states",id:"tutorial-mrdoob/states",title:"States",description:"Now we can define our states. Each state will have a state name and one image. After creating the",source:"@site/docs/tutorial-mrdoob/states.md",sourceDirName:"tutorial-mrdoob",slug:"/tutorial-mrdoob/states",permalink:"/brobot/docs/tutorial-mrdoob/states",draft:!1,editUrl:"https://jspinak.github.io/brobot/docs/tutorial-mrdoob/states.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"State Images",permalink:"/brobot/docs/tutorial-mrdoob/images"},next:{title:"Transitions",permalink:"/brobot/docs/tutorial-mrdoob/transitions"}},c={},l=[],u={toc:l};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"states"},"States"),(0,a.kt)("p",null,"Now we can define our states. Each state will have a state name and one image. After creating the\nstate, we save it with Brobot so that Brobot knows it is part of our model and can manage it for us."),(0,a.kt)("p",null,"Here are our 3 state classes:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'  @Component\n  @Getter\n  public class Homepage {\n  \n      private StateImage harmony = new StateImage.Builder()\n              .addPattern("harmonyIcon")\n              .build();\n  \n      private State state = new State.Builder("homepage")\n              .withImages(harmony)\n              .build();\n  \n      public Homepage(AllStatesInProjectService stateService) {\n          stateService.save(state);\n      }\n  }\n\n  @Component\n  @Getter\n  public class Harmony {\n  \n      private StateImage about = new StateImage.Builder()\n              .addPattern("aboutButton")\n              .build();\n  \n      private State state = new State.Builder("harmony")\n              .withImages(about)\n              .build();\n  \n      public Harmony(AllStatesInProjectService stateService) {\n          stateService.save(state);\n      }\n  }\n\n  @Component\n  @Getter\n  public class About {\n  \n     private StateImage aboutText = new StateImage.Builder()\n             .addPattern("aboutText")\n             .build();\n  \n     private State state = new State.Builder("about")\n             .withImages(aboutText)\n             .build();\n  \n     public About(AllStatesInProjectService stateService) {\n        stateService.save(state);\n     }\n  }\n')))}p.isMDXComponent=!0}}]);
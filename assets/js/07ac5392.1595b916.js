"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[422],{3905:(t,e,o)=>{o.d(e,{Zo:()=>u,kt:()=>b});var n=o(7294);function r(t,e,o){return e in t?Object.defineProperty(t,e,{value:o,enumerable:!0,configurable:!0,writable:!0}):t[e]=o,t}function i(t,e){var o=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),o.push.apply(o,n)}return o}function a(t){for(var e=1;e<arguments.length;e++){var o=null!=arguments[e]?arguments[e]:{};e%2?i(Object(o),!0).forEach((function(e){r(t,e,o[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(o,e))}))}return t}function l(t,e){if(null==t)return{};var o,n,r=function(t,e){if(null==t)return{};var o,n,r={},i=Object.keys(t);for(n=0;n<i.length;n++)o=i[n],e.indexOf(o)>=0||(r[o]=t[o]);return r}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(n=0;n<i.length;n++)o=i[n],e.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(t,o)&&(r[o]=t[o])}return r}var s=n.createContext({}),p=function(t){var e=n.useContext(s),o=e;return t&&(o="function"==typeof t?t(e):a(a({},e),t)),o},u=function(t){var e=p(t.components);return n.createElement(s.Provider,{value:e},t.children)},c={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},m=n.forwardRef((function(t,e){var o=t.components,r=t.mdxType,i=t.originalType,s=t.parentName,u=l(t,["components","mdxType","originalType","parentName"]),m=p(o),b=r,d=m["".concat(s,".").concat(b)]||m[b]||c[b]||i;return o?n.createElement(d,a(a({ref:e},u),{},{components:o})):n.createElement(d,a({ref:e},u))}));function b(t,e){var o=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var i=o.length,a=new Array(i);a[0]=m;var l={};for(var s in e)hasOwnProperty.call(e,s)&&(l[s]=e[s]);l.originalType=t,l.mdxType="string"==typeof t?t:r,a[1]=l;for(var p=2;p<i;p++)a[p]=o[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,o)}m.displayName="MDXCreateElement"},7085:(t,e,o)=>{o.r(e),o.d(e,{assets:()=>s,contentTitle:()=>a,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var n=o(7462),r=(o(7294),o(3905));const i={sidebar_position:1},a="A Simple Automation App with Brobot 1.0.7.",l={unversionedId:"tutorial-mrdoob/setup",id:"tutorial-mrdoob/setup",title:"A Simple Automation App with Brobot 1.0.7.",description:"When this tutorial was created, version 1.0.7 was still in development and not in Maven Central.",source:"@site/docs/tutorial-mrdoob/setup.md",sourceDirName:"tutorial-mrdoob",slug:"/tutorial-mrdoob/setup",permalink:"/brobot/docs/tutorial-mrdoob/setup",draft:!1,editUrl:"https://jspinak.github.io/brobot/docs/tutorial-mrdoob/setup.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Tutorial for Using the Latest Brobot Code in Github",permalink:"/brobot/docs/tutorial-using-the-latest-code-in-github/intro"},next:{title:"The Model",permalink:"/brobot/docs/tutorial-mrdoob/model"}},s={},p=[],u={toc:p};function c(t){let{components:e,...o}=t;return(0,r.kt)("wrapper",(0,n.Z)({},u,o,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"a-simple-automation-app-with-brobot-107"},"A Simple Automation App with Brobot 1.0.7."),(0,r.kt)("p",null,"When this tutorial was created, version 1.0.7 was still in development and not in Maven Central.\nIf you are reading this before 1.0.7 is on Maven Central and want to follow the tutorial,\nlook first at the tutorial about\n",(0,r.kt)("a",{parentName:"p",href:"/docs/tutorial-using-the-latest-code-in-github/intro"},"using the latest code in GitHub"),".\nThe repository for this project is at ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/jspinak/mrdoob"},"https://github.com/jspinak/mrdoob"),"."),(0,r.kt)("p",null,"This tutorial shows how to set up a Brobot application. In this tutorial, you will create a\nstate structure (or model of the GUI environment) manually. First make sure you have the right\ndependencies. If you are using a JAR file, your build.gradle file will look like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"     plugins {\n        id 'java'\n        id 'org.springframework.boot' version '3.3.0'\n        id 'io.spring.dependency-management' version '1.1.5'\n     }\n     \n     group = 'io.github.jspinak.brobot'\n     version = '0.0.1-SNAPSHOT'\n     \n     java {\n        toolchain {\n           languageVersion = JavaLanguageVersion.of(20)\n        }\n     }\n     \n     configurations {\n        compileOnly {\n           extendsFrom annotationProcessor\n        }\n     }\n     \n     repositories {\n        mavenCentral()\n     }\n     \n     dependencies {\n        implementation 'org.springframework.boot:spring-boot-starter'\n        compileOnly 'org.projectlombok:lombok'\n        annotationProcessor 'org.projectlombok:lombok'\n        testImplementation 'org.springframework.boot:spring-boot-starter-test'\n        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'\n        implementation('com.sikulix:sikulixapi:2.0.5') {\n           exclude group: 'org.slf4j', module: 'slf4j-nop'\n        }\n        implementation group: 'org.bytedeco', name: 'javacv-platform', version: '1.5.10'\n        implementation files('../brobot/library/build/libs/library-1.0.7.jar') // the relative path to the JAR\n        implementation 'com.github.kwhat:jnativehook:2.2.2'\n     }\n     \n     tasks.named('test') {\n        useJUnitPlatform()\n     }\n")))}c.isMDXComponent=!0}}]);
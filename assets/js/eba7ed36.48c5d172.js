"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[162],{3905:(t,n,o)=>{o.d(n,{Zo:()=>l,kt:()=>d});var e=o(7294);function i(t,n,o){return n in t?Object.defineProperty(t,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):t[n]=o,t}function r(t,n){var o=Object.keys(t);if(Object.getOwnPropertySymbols){var e=Object.getOwnPropertySymbols(t);n&&(e=e.filter((function(n){return Object.getOwnPropertyDescriptor(t,n).enumerable}))),o.push.apply(o,e)}return o}function a(t){for(var n=1;n<arguments.length;n++){var o=null!=arguments[n]?arguments[n]:{};n%2?r(Object(o),!0).forEach((function(n){i(t,n,o[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(o)):r(Object(o)).forEach((function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(o,n))}))}return t}function s(t,n){if(null==t)return{};var o,e,i=function(t,n){if(null==t)return{};var o,e,i={},r=Object.keys(t);for(e=0;e<r.length;e++)o=r[e],n.indexOf(o)>=0||(i[o]=t[o]);return i}(t,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(e=0;e<r.length;e++)o=r[e],n.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(t,o)&&(i[o]=t[o])}return i}var c=e.createContext({}),u=function(t){var n=e.useContext(c),o=n;return t&&(o="function"==typeof t?t(n):a(a({},n),t)),o},l=function(t){var n=u(t.components);return e.createElement(c.Provider,{value:n},t.children)},p={inlineCode:"code",wrapper:function(t){var n=t.children;return e.createElement(e.Fragment,{},n)}},m=e.forwardRef((function(t,n){var o=t.components,i=t.mdxType,r=t.originalType,c=t.parentName,l=s(t,["components","mdxType","originalType","parentName"]),m=u(o),d=i,b=m["".concat(c,".").concat(d)]||m[d]||p[d]||r;return o?e.createElement(b,a(a({ref:n},l),{},{components:o})):e.createElement(b,a({ref:n},l))}));function d(t,n){var o=arguments,i=n&&n.mdxType;if("string"==typeof t||i){var r=o.length,a=new Array(r);a[0]=m;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=t,s.mdxType="string"==typeof t?t:i,a[1]=s;for(var u=2;u<r;u++)a[u]=o[u];return e.createElement.apply(null,a)}return e.createElement.apply(null,o)}m.displayName="MDXCreateElement"},7317:(t,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>u});var e=o(7462),i=(o(7294),o(3905));const r={sidebar_position:5},a="Transitions",s={unversionedId:"tutorial-mrdoob/transitions",id:"tutorial-mrdoob/transitions",title:"Transitions",description:"The transitions classes do 2 things. They tell Brobot how to move from their state to another state, and also how",source:"@site/docs/tutorial-mrdoob/transitions.md",sourceDirName:"tutorial-mrdoob",slug:"/tutorial-mrdoob/transitions",permalink:"/brobot/docs/tutorial-mrdoob/transitions",draft:!1,editUrl:"https://jspinak.github.io/brobot/docs/tutorial-mrdoob/transitions.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"States",permalink:"/brobot/docs/tutorial-mrdoob/states"},next:{title:"Automation Instructions",permalink:"/brobot/docs/tutorial-mrdoob/instructions"}},c={},u=[],l={toc:u};function p(t){let{components:n,...o}=t;return(0,i.kt)("wrapper",(0,e.Z)({},l,o,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"transitions"},"Transitions"),(0,i.kt)("p",null,"The transitions classes do 2 things. They tell Brobot how to move from their state to another state, and also how\nto finish an incoming transition to their state. These transitions are also saved with Brobot so that Brobot\ncan manage state transitions for us."),(0,i.kt)("p",null,"Here are the transitions classes:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'  @Component\n  public class HomepageTransitions {\n  \n      private final Action action;\n      private final Homepage homepage;\n  \n      public HomepageTransitions(StateTransitionsRepository stateTransitionsRepository,\n                                 Action action, Homepage homepage) {\n          this.action = action;\n          this.homepage = homepage;\n          StateTransitions transitions = new StateTransitions.Builder("homepage")\n                  .addTransitionFinish(this::finishTransition)\n                  .addTransition(new StateTransition.Builder()\n                          .addToActivate("harmony")\n                          .setFunction(this::gotoHarmony)\n                          .build())\n                  .build();\n          stateTransitionsRepository.add(transitions);\n      }\n  \n      private boolean finishTransition() {\n          return action.perform(FIND, homepage.getHarmony()).isSuccess();\n      }\n  \n      private boolean gotoHarmony() {\n          return action.perform(CLICK, homepage.getHarmony()).isSuccess();\n      }\n  \n  }\n  \n  @Component\n  public class HarmonyTransitions {\n  \n      private final Action action;\n      private final Harmony harmony;\n  \n      public HarmonyTransitions(StateTransitionsRepository stateTransitionsRepository,\n                                 Action action, Harmony harmony) {\n          this.action = action;\n          this.harmony = harmony;\n          StateTransitions transitions = new StateTransitions.Builder("harmony")\n                  .addTransitionFinish(this::finishTransition)\n                  .addTransition(new StateTransition.Builder()\n                          .addToActivate("about")\n                          .setFunction(this::gotoAbout)\n                          .build())\n                  .build();\n          stateTransitionsRepository.add(transitions);\n      }\n  \n      private boolean finishTransition() {\n          return action.perform(FIND, harmony.getAbout()).isSuccess();\n      }\n  \n      private boolean gotoAbout() {\n          return action.perform(CLICK, harmony.getAbout()).isSuccess();\n      }\n  \n  }\n  \n  @Component\n  public class AboutTransitions {\n  \n      private final Action action;\n      private final About about;\n  \n      public AboutTransitions(StateTransitionsRepository stateTransitionsRepository,\n                                Action action, About about) {\n          this.action = action;\n          this.about = about;\n          StateTransitions transitions = new StateTransitions.Builder("about")\n                  .addTransitionFinish(this::finishTransition)\n                  .build();\n          stateTransitionsRepository.add(transitions);\n      }\n  \n      private boolean finishTransition() {\n          return action.perform(FIND, about.getAboutText()).isSuccess();\n      }\n  \n  }\n')))}p.isMDXComponent=!0}}]);